---
import Layout from '../layouts/Layout.astro';
import RangeDate from '../components/RangeDate.svelte';
---

<Layout title="Welcome to Astro.">
	<main class="p-4">
		<!-- <RangeDate client:load /> -->
		<!-- <RangeDate client:load /> -->

		<!-- <div class="calendar">
			<div class="calendar__info">
					<div class="calendar__prev" id="prev-month">&#9664;</div>
					<div class="calendar__month" id="month"></div>
					<div class="calendar__year" id="year"></div>
					<div class="calendar__next" id="next-month">&#9654;</div>
			</div>
	
			<div class="calendar__week">
					<div class="calendar__day calendar__item">Mon</div>
					<div class="calendar__day calendar__item">Tue</div>
					<div class="calendar__day calendar__item">Wed</div>
					<div class="calendar__day calendar__item">Thu</div>
					<div class="calendar__day calendar__item">Fri</div>
					<div class="calendar__day calendar__item">Sat</div>
					<div class="calendar__day calendar__item">Sun</div>
			</div>
	
			<div class="calendar__dates" id="dates"></div>
	</div> -->
	</main>
</Layout>

<!-- <script>
  let monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September','October', 'November', 'December'];

let currentDate : any= new Date();
let currentDay : any= currentDate.getDate();
let monthNumber : any= currentDate.getMonth();
let currentYear : any= currentDate.getFullYear();

let dates : any= document.getElementById('dates');
let month : any= document.getElementById('month');
let year : any= document.getElementById('year');

let prevMonthDOM : any= document.getElementById('prev-month');
let nextMonthDOM : any= document.getElementById('next-month');

month.textContent = monthNames[monthNumber];
year.textContent = currentYear.toString();

prevMonthDOM.addEventListener('click', ()=>lastMonth());
nextMonthDOM.addEventListener('click', ()=>nextMonth());



const writeMonth = (month: any) => {

    for(let i = startDay(); i>0;i--){
        dates.innerHTML += ` <div class="calendar__date calendar__item calendar__last-days">
            ${getTotalDays(monthNumber-1)-(i-1)}
        </div>`;
    }

    for(let i=1; i<=getTotalDays(month); i++){
        if(i===currentDay) {
            dates.innerHTML += ` <div class="calendar__date calendar__item calendar__today">${i}</div>`;
        }else{
            dates.innerHTML += ` <div class="calendar__date calendar__item">${i}</div>`;
        }
    }
}

const getTotalDays = (month: any) => {
    if(month === -1) month = 11;

    if (month == 0 || month == 2 || month == 4 || month == 6 || month == 7 || month == 9 || month == 11) {
        return  31;

    } else if (month == 3 || month == 5 || month == 8 || month == 10) {
        return 30;

    } else {

        return isLeap() ? 29:28;
    }
}

const isLeap = () => {
    return ((currentYear % 100 !==0) && (currentYear % 4 === 0) || (currentYear % 400 === 0));
}

const startDay = () => {
    let start = new Date(currentYear, monthNumber, 1);
    return ((start.getDay()-1) === -1) ? 6 : start.getDay()-1;
}

const lastMonth = () => {
    if(monthNumber !== 0){
        monthNumber--;
    }else{
        monthNumber = 11;
        currentYear--;
    }

    setNewDate();
}

const nextMonth = () => {
    if(monthNumber !== 11){
        monthNumber++;
    }else{
        monthNumber = 0;
        currentYear++;
    }

    setNewDate();
}

const setNewDate = () => {
    currentDate.setFullYear(currentYear,monthNumber,currentDay);
    month.textContent = monthNames[monthNumber];
    year.textContent = currentYear.toString();
    dates.textContent = '';
    writeMonth(monthNumber);
}

writeMonth(monthNumber);
</script> -->

<style>

	.calendar {
	 background: white;
	 width: 80%;
	 max-width: 600px;
	 margin: 1em auto;
	 padding: 0.5em 0;
}
 .calendar__info {
	 display: flex;
	 align-items: center;
	 padding: 0 2em;
	 font-size: 1.2em;
	 text-transform: uppercase;
}
 .calendar__prev, .calendar__next {
	 color: red;
	 cursor: pointer;
	 font-size: 1.3em;
}
 .calendar__prev {
	 margin-right: auto;
}
 .calendar__next {
	 margin-left: auto;
}
 .calendar__week, .calendar__dates {
	 display: grid;
	 grid-template-columns: repeat(7, 1fr);
	 grid-gap: 10px;
}
 .calendar__month, .calendar__year {
	 padding: 0.5em 1em;
}
 .calendar__item {
	 text-align: center;
	 line-height: 2;
}
 .calendar__today {
	 background: lightcoral;
	 color: white;
	 width: 50%;
	 border-radius: 50%;
	 margin: auto;
}
 .calendar__last-days {
	 opacity: 0.3;
}
 
</style>
